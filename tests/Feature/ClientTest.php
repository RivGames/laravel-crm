<?php

namespace Tests\Feature;

use App\Models\Client;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class ClientTest extends TestCase
{
    use RefreshDatabase;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Client::factory(10)->create();
    }

    public function testIndexMethodReturnsClientCollection()
    {
        $response = $this->getJson(route('clients.index'));

        $response->assertJsonStructure([
            [
            'company_name',
            'company_vat',
            'address'
            ]
        ]);
        $response->assertOk();
    }

    public function testStoreMethodCreatesNewRecord()
    {
        $userData = [
            'contact_name' => fake()->word(),
            'contact_email' => fake()->email(),
            'contact_phone_number' => fake()->phoneNumber(),
            'company_name' => fake()->word(),
            'company_address' => fake()->address(),
            'company_city' => fake()->city(),
            'company_zip' => rand(1,100_000),
            'company_vat' => rand(1,10_000)
        ];

        $response = $this->postJson(route('clients.store'),$userData);

        $response->assertExactJson(['message' => 'Client successfully created!']);
        $this->assertDatabaseCount('clients',11);
        $response->assertCreated();
    }
}
